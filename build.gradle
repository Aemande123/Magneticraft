<<<<<<< HEAD

// For those who want the bleeding edge
=======
>>>>>>> f047ff5f4081e0a39fd0e644f8a349247b11279c
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
<<<<<<< HEAD
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "1.0"
group= "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

minecraft {
    version = "1.8.9-11.15.1.1765"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
=======

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.6'
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0.0-alpha5"
group= "com.cout970.magneticraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "magneticraft"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

minecraft {
    version = "1.8.9-11.15.0.1699"
    runDir = "run"
    useDepAts = true
   
    mappings = "snapshot_20151122"
	makeObfSourceJar = false
}

dependencies {
    deobfCompile "MCMultiPart:MCMultiPart:1.0.4:universal"
    deobfCompile "mezz.jei:jei_1.8.9:2.16.2.78"
	compile files("./blacksmith/blacksmith-api-0.0.2alpha2-dev.jar")
}

//curseforge {
//    apiKey = project.curseForgeApiKey
//   project {
//        id = '224808'
//        mainArtifact(jar) {
//            displayName = 'Magneticraft ' + version
//        }
//        releaseType = 'release'
//        changelog = file('./changelogs/' + version + '.txt')
//        if (version.contains('beta')) {
//            releaseType = 'beta'
//        }
//        if (version.contains('alpha')) {
//            releaseType = 'alpha'
//        }
//        relations {
//            requiredLibrary 'mcmultipart'
//        }
//    }
//}

repositories {
    maven {
        name = "Mobius Repo"
        url = "http://mobiusstrip.eu/maven"
    }
    maven {
        name = 'CB Repo'
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "tehnut"
        url = "http://tehnut.info/maven/"
    }
    maven {
        name = "amadornes"
        url = "http://maven.amadornes.com/"
    }
    maven {
        name = "mezz"
        url = "http://dvs1.progwml6.com/files/maven"
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives devJar
}

apply plugin: 'idea'

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
               
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
      
>>>>>>> f047ff5f4081e0a39fd0e644f8a349247b11279c
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
